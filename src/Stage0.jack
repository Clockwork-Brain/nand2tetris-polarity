//  ================================================================================
//                                   library Stage0
//  ================================================================================

/**
 *  Stage 0 implementation.
 *
 */
class Stage0 {

	//  ----------------------------------------------------------------------------
	//  0.  START
	//  ----------------------------------------------------------------------------

	/**
	 *  Plays this stage.
	 *
	 *  Returns true if the player reached the end, false if they failed.
	 */
	function bool play() {
		var GameLoop game_loop;

		let game_loop = Stage0.create_game_loop();

		do Screen.clearScreen();
		do Display.draw_floor_ceiling(1, 1);
		do Display.draw_status_bar();
		do Display.draw_bots_left(Stats.get_bots_left());
		do Display.draw_score(Stats.get_score());

		return Stage0.game_loop(game_loop);
	}

	function GameLoop create_game_loop() {
		var WorldData world_data;
		var CellState cell_state;

		let world_data = WorldData.new(Stage0.get_world_data());
		let cell_state = CellState.new();
		do cell_state.reset(1, 1);
		return GameLoop.new(cell_state, world_data);
	}

	//  ----------------------------------------------------------------------------
	//  1.  GAME LOOP
	//  ----------------------------------------------------------------------------

	function bool game_loop(GameLoop game_loop) {
		var Bot bot;
		var bool space_pressed;
		var int game_state;

		let bot = game_loop.get_bot();
		let space_pressed = false;
		let game_state = 0;

		do bot.draw(0);
		do Display.draw_battery_meter(bot.get_battery_level());

		while (game_state = 0) {
			let space_pressed = (Keyboard.keyPressed() = 32);
			let game_state = game_loop.update(space_pressed);
			do Display.draw_battery_meter(bot.get_battery_level());
			do Display.draw_score(Stats.get_score());

			// Wait for GAME_LOOP_DELAY ms.
			do Sys.wait(30);
		}

		if (game_state > 0) {
			do Stage0.end_stage();
			return true;
		}
		return false;
	}

	//  ----------------------------------------------------------------------------
	//  2.  END
	//  ----------------------------------------------------------------------------

	function void end_stage() {
		do Stats.add_score(1000);
		do Display.draw_score(Stats.get_score());
		do Display.draw_text(
			16,
			5,
			"Congratulations! You have reached the end of the game!"
		);
		return;
	}

	//  ============================================================================
	//                                    MAP DATA
	//  ============================================================================

	// Peak WorldBrush use: 51
	function Array get_world_data() {
		var Array a;
		let a = Array.new(1119);
		let a[0] = 10002;
		let a[1] = 0;
		let a[2] = 0;
		let a[3] = 1;
		let a[4] = 1;
		let a[5] = 13;
		let a[6] = 8;
		let a[7] = 2;
		let a[8] = 14;
		let a[9] = 1;
		let a[10] = 10004;
		let a[11] = 3;
		let a[12] = 13;
		let a[13] = 0;
		let a[14] = 10008;
		let a[15] = 4;
		let a[16] = 12;
		let a[17] = 8;
		let a[18] = 10010;
		let a[19] = 5;
		let a[20] = 12;
		let a[21] = 0;
		let a[22] = 10026;
		let a[23] = 6;
		let a[24] = 1;
		let a[25] = 8;
		let a[26] = 10028;
		let a[27] = 7;
		let a[28] = 1;
		let a[29] = 8;
		let a[30] = 10030;
		let a[31] = 8;
		let a[32] = 1;
		let a[33] = 0;
		let a[34] = 10042;
		let a[35] = 9;
		let a[36] = 1;
		let a[37] = 2;
		let a[38] = 10;
		let a[39] = 2;
		let a[40] = 2;
		let a[41] = 11;
		let a[42] = 3;
		let a[43] = 2;
		let a[44] = 12;
		let a[45] = 4;
		let a[46] = 2;
		let a[47] = 13;
		let a[48] = 5;
		let a[49] = 2;
		let a[50] = 14;
		let a[51] = 6;
		let a[52] = 2;
		let a[53] = 15;
		let a[54] = 7;
		let a[55] = 2;
		let a[56] = 10044;
		let a[57] = 16;
		let a[58] = 1;
		let a[59] = 1;
		let a[60] = 17;
		let a[61] = 2;
		let a[62] = 1;
		let a[63] = 18;
		let a[64] = 3;
		let a[65] = 1;
		let a[66] = 19;
		let a[67] = 4;
		let a[68] = 1;
		let a[69] = 20;
		let a[70] = 5;
		let a[71] = 1;
		let a[72] = 21;
		let a[73] = 6;
		let a[74] = 1;
		let a[75] = 22;
		let a[76] = 7;
		let a[77] = 1;
		let a[78] = 10048;
		let a[79] = 23;
		let a[80] = 8;
		let a[81] = 6;
		let a[82] = 24;
		let a[83] = 14;
		let a[84] = 3;
		let a[85] = 10076;
		let a[86] = 0;
		let a[87] = 8;
		let a[88] = 0;
		let a[89] = 1;
		let a[90] = 14;
		let a[91] = 1;
		let a[92] = 10078;
		let a[93] = 2;
		let a[94] = 8;
		let a[95] = 10;
		let a[96] = 10080;
		let a[97] = 3;
		let a[98] = 1;
		let a[99] = 0;
		let a[100] = 4;
		let a[101] = 2;
		let a[102] = 0;
		let a[103] = 5;
		let a[104] = 3;
		let a[105] = 0;
		let a[106] = 25;
		let a[107] = 4;
		let a[108] = 0;
		let a[109] = 26;
		let a[110] = 5;
		let a[111] = 0;
		let a[112] = 27;
		let a[113] = 6;
		let a[114] = 0;
		let a[115] = 28;
		let a[116] = 7;
		let a[117] = 0;
		let a[118] = 29;
		let a[119] = 8;
		let a[120] = 0;
		let a[121] = 10088;
		let a[122] = 30;
		let a[123] = 1;
		let a[124] = 8;
		let a[125] = 10090;
		let a[126] = 6;
		let a[127] = 1;
		let a[128] = 0;
		let a[129] = 31;
		let a[130] = 6;
		let a[131] = 2;
		let a[132] = 32;
		let a[133] = 7;
		let a[134] = 2;
		let a[135] = 33;
		let a[136] = 8;
		let a[137] = 2;
		let a[138] = 34;
		let a[139] = 9;
		let a[140] = 2;
		let a[141] = 35;
		let a[142] = 10;
		let a[143] = 2;
		let a[144] = 36;
		let a[145] = 11;
		let a[146] = 2;
		let a[147] = 37;
		let a[148] = 12;
		let a[149] = 2;
		let a[150] = 38;
		let a[151] = 13;
		let a[152] = 2;
		let a[153] = 10092;
		let a[154] = 7;
		let a[155] = 6;
		let a[156] = 1;
		let a[157] = 39;
		let a[158] = 7;
		let a[159] = 1;
		let a[160] = 40;
		let a[161] = 8;
		let a[162] = 1;
		let a[163] = 41;
		let a[164] = 9;
		let a[165] = 1;
		let a[166] = 42;
		let a[167] = 10;
		let a[168] = 1;
		let a[169] = 43;
		let a[170] = 11;
		let a[171] = 1;
		let a[172] = 44;
		let a[173] = 12;
		let a[174] = 1;
		let a[175] = 45;
		let a[176] = 13;
		let a[177] = 1;
		let a[178] = 10096;
		let a[179] = 8;
		let a[180] = 5;
		let a[181] = 8;
		let a[182] = 10098;
		let a[183] = 46;
		let a[184] = 5;
		let a[185] = 0;
		let a[186] = 10104;
		let a[187] = 47;
		let a[188] = 5;
		let a[189] = 4;
		let a[190] = 10106;
		let a[191] = 9;
		let a[192] = 5;
		let a[193] = 0;
		let a[194] = 10114;
		let a[195] = 10;
		let a[196] = 1;
		let a[197] = 6;
		let a[198] = 10116;
		let a[199] = 11;
		let a[200] = 6;
		let a[201] = 0;
		let a[202] = 12;
		let a[203] = 7;
		let a[204] = 0;
		let a[205] = 10120;
		let a[206] = 13;
		let a[207] = 0;
		let a[208] = 3;
		let a[209] = 14;
		let a[210] = 1;
		let a[211] = 0;
		let a[212] = 10136;
		let a[213] = 15;
		let a[214] = 8;
		let a[215] = 0;
		let a[216] = 16;
		let a[217] = 9;
		let a[218] = 0;
		let a[219] = 17;
		let a[220] = 10;
		let a[221] = 0;
		let a[222] = 18;
		let a[223] = 11;
		let a[224] = 0;
		let a[225] = 19;
		let a[226] = 12;
		let a[227] = 0;
		let a[228] = 20;
		let a[229] = 13;
		let a[230] = 0;
		let a[231] = 10142;
		let a[232] = 0;
		let a[233] = 8;
		let a[234] = 2;
		let a[235] = 1;
		let a[236] = 9;
		let a[237] = 2;
		let a[238] = 10144;
		let a[239] = 2;
		let a[240] = 8;
		let a[241] = 1;
		let a[242] = 3;
		let a[243] = 9;
		let a[244] = 1;
		let a[245] = 4;
		let a[246] = 10;
		let a[247] = 6;
		let a[248] = 5;
		let a[249] = 13;
		let a[250] = 10;
		let a[251] = 10146;
		let a[252] = 21;
		let a[253] = 10;
		let a[254] = 0;
		let a[255] = 22;
		let a[256] = 13;
		let a[257] = 0;
		let a[258] = 10150;
		let a[259] = 23;
		let a[260] = 10;
		let a[261] = 10;
		let a[262] = 24;
		let a[263] = 13;
		let a[264] = 4;
		let a[265] = 10152;
		let a[266] = 25;
		let a[267] = 10;
		let a[268] = 0;
		let a[269] = 26;
		let a[270] = 13;
		let a[271] = 0;
		let a[272] = 10156;
		let a[273] = 6;
		let a[274] = 10;
		let a[275] = 6;
		let a[276] = 7;
		let a[277] = 13;
		let a[278] = 10;
		let a[279] = 10158;
		let a[280] = 27;
		let a[281] = 6;
		let a[282] = 8;
		let a[283] = 28;
		let a[284] = 10;
		let a[285] = 0;
		let a[286] = 29;
		let a[287] = 13;
		let a[288] = 0;
		let a[289] = 10160;
		let a[290] = 8;
		let a[291] = 6;
		let a[292] = 0;
		let a[293] = 10162;
		let a[294] = 30;
		let a[295] = 0;
		let a[296] = 1;
		let a[297] = 31;
		let a[298] = 6;
		let a[299] = 8;
		let a[300] = 32;
		let a[301] = 13;
		let a[302] = 4;
		let a[303] = 10164;
		let a[304] = 33;
		let a[305] = 1;
		let a[306] = 2;
		let a[307] = 34;
		let a[308] = 2;
		let a[309] = 2;
		let a[310] = 35;
		let a[311] = 3;
		let a[312] = 2;
		let a[313] = 36;
		let a[314] = 6;
		let a[315] = 0;
		let a[316] = 37;
		let a[317] = 13;
		let a[318] = 0;
		let a[319] = 10166;
		let a[320] = 38;
		let a[321] = 1;
		let a[322] = 1;
		let a[323] = 39;
		let a[324] = 2;
		let a[325] = 1;
		let a[326] = 40;
		let a[327] = 3;
		let a[328] = 1;
		let a[329] = 41;
		let a[330] = 4;
		let a[331] = 6;
		let a[332] = 42;
		let a[333] = 8;
		let a[334] = 0;
		let a[335] = 43;
		let a[336] = 9;
		let a[337] = 0;
		let a[338] = 10172;
		let a[339] = 9;
		let a[340] = 13;
		let a[341] = 8;
		let a[342] = 10174;
		let a[343] = 44;
		let a[344] = 13;
		let a[345] = 0;
		let a[346] = 10178;
		let a[347] = 10;
		let a[348] = 4;
		let a[349] = 1;
		let a[350] = 10184;
		let a[351] = 11;
		let a[352] = 10;
		let a[353] = 2;
		let a[354] = 12;
		let a[355] = 11;
		let a[356] = 2;
		let a[357] = 13;
		let a[358] = 12;
		let a[359] = 2;
		let a[360] = 14;
		let a[361] = 13;
		let a[362] = 2;
		let a[363] = 10186;
		let a[364] = 45;
		let a[365] = 10;
		let a[366] = 1;
		let a[367] = 46;
		let a[368] = 11;
		let a[369] = 1;
		let a[370] = 47;
		let a[371] = 12;
		let a[372] = 1;
		let a[373] = 48;
		let a[374] = 13;
		let a[375] = 1;
		let a[376] = 10190;
		let a[377] = 49;
		let a[378] = 10;
		let a[379] = 3;
		let a[380] = 10230;
		let a[381] = 0;
		let a[382] = 4;
		let a[383] = 0;
		let a[384] = 1;
		let a[385] = 10;
		let a[386] = 0;
		let a[387] = 10234;
		let a[388] = 2;
		let a[389] = 1;
		let a[390] = 0;
		let a[391] = 3;
		let a[392] = 2;
		let a[393] = 0;
		let a[394] = 4;
		let a[395] = 3;
		let a[396] = 0;
		let a[397] = 5;
		let a[398] = 11;
		let a[399] = 0;
		let a[400] = 6;
		let a[401] = 12;
		let a[402] = 0;
		let a[403] = 7;
		let a[404] = 13;
		let a[405] = 0;
		let a[406] = 10236;
		let a[407] = 8;
		let a[408] = 1;
		let a[409] = 8;
		let a[410] = 10238;
		let a[411] = 9;
		let a[412] = 1;
		let a[413] = 0;
		let a[414] = 10242;
		let a[415] = 10;
		let a[416] = 7;
		let a[417] = 8;
		let a[418] = 10244;
		let a[419] = 15;
		let a[420] = 7;
		let a[421] = 0;
		let a[422] = 10248;
		let a[423] = 11;
		let a[424] = 13;
		let a[425] = 8;
		let a[426] = 10250;
		let a[427] = 12;
		let a[428] = 13;
		let a[429] = 0;
		let a[430] = 10254;
		let a[431] = 13;
		let a[432] = 7;
		let a[433] = 8;
		let a[434] = 10256;
		let a[435] = 14;
		let a[436] = 7;
		let a[437] = 0;
		let a[438] = 10260;
		let a[439] = 16;
		let a[440] = 1;
		let a[441] = 8;
		let a[442] = 10262;
		let a[443] = 17;
		let a[444] = 1;
		let a[445] = 0;
		let a[446] = 10266;
		let a[447] = 18;
		let a[448] = 7;
		let a[449] = 8;
		let a[450] = 10268;
		let a[451] = 19;
		let a[452] = 7;
		let a[453] = 0;
		let a[454] = 10272;
		let a[455] = 20;
		let a[456] = 13;
		let a[457] = 8;
		let a[458] = 10274;
		let a[459] = 21;
		let a[460] = 13;
		let a[461] = 0;
		let a[462] = 10280;
		let a[463] = 22;
		let a[464] = 1;
		let a[465] = 1;
		let a[466] = 23;
		let a[467] = 2;
		let a[468] = 1;
		let a[469] = 24;
		let a[470] = 3;
		let a[471] = 1;
		let a[472] = 25;
		let a[473] = 10;
		let a[474] = 1;
		let a[475] = 26;
		let a[476] = 11;
		let a[477] = 1;
		let a[478] = 27;
		let a[479] = 12;
		let a[480] = 1;
		let a[481] = 28;
		let a[482] = 13;
		let a[483] = 1;
		let a[484] = 10286;
		let a[485] = 29;
		let a[486] = 10;
		let a[487] = 3;
		let a[488] = 10294;
		let a[489] = 0;
		let a[490] = 3;
		let a[491] = 6;
		let a[492] = 10298;
		let a[493] = 1;
		let a[494] = 3;
		let a[495] = 3;
		let a[496] = 2;
		let a[497] = 10;
		let a[498] = 4;
		let a[499] = 10310;
		let a[500] = 3;
		let a[501] = 3;
		let a[502] = 6;
		let a[503] = 4;
		let a[504] = 10;
		let a[505] = 3;
		let a[506] = 10314;
		let a[507] = 5;
		let a[508] = 3;
		let a[509] = 1;
		let a[510] = 6;
		let a[511] = 4;
		let a[512] = 1;
		let a[513] = 10322;
		let a[514] = 7;
		let a[515] = 10;
		let a[516] = 4;
		let a[517] = 10334;
		let a[518] = 8;
		let a[519] = 0;
		let a[520] = 6;
		let a[521] = 9;
		let a[522] = 1;
		let a[523] = 0;
		let a[524] = 10;
		let a[525] = 2;
		let a[526] = 0;
		let a[527] = 11;
		let a[528] = 3;
		let a[529] = 0;
		let a[530] = 12;
		let a[531] = 4;
		let a[532] = 0;
		let a[533] = 13;
		let a[534] = 10;
		let a[535] = 1;
		let a[536] = 10346;
		let a[537] = 14;
		let a[538] = 2;
		let a[539] = 2;
		let a[540] = 15;
		let a[541] = 4;
		let a[542] = 2;
		let a[543] = 10348;
		let a[544] = 16;
		let a[545] = 0;
		let a[546] = 1;
		let a[547] = 17;
		let a[548] = 1;
		let a[549] = 1;
		let a[550] = 18;
		let a[551] = 2;
		let a[552] = 1;
		let a[553] = 19;
		let a[554] = 3;
		let a[555] = 1;
		let a[556] = 20;
		let a[557] = 4;
		let a[558] = 1;
		let a[559] = 10356;
		let a[560] = 21;
		let a[561] = 7;
		let a[562] = 10;
		let a[563] = 10358;
		let a[564] = 0;
		let a[565] = 4;
		let a[566] = 0;
		let a[567] = 22;
		let a[568] = 7;
		let a[569] = 0;
		let a[570] = 23;
		let a[571] = 10;
		let a[572] = 0;
		let a[573] = 10360;
		let a[574] = 24;
		let a[575] = 3;
		let a[576] = 0;
		let a[577] = 25;
		let a[578] = 11;
		let a[579] = 0;
		let a[580] = 10362;
		let a[581] = 1;
		let a[582] = 2;
		let a[583] = 0;
		let a[584] = 2;
		let a[585] = 12;
		let a[586] = 0;
		let a[587] = 10364;
		let a[588] = 26;
		let a[589] = 1;
		let a[590] = 0;
		let a[591] = 27;
		let a[592] = 13;
		let a[593] = 0;
		let a[594] = 10366;
		let a[595] = 28;
		let a[596] = 7;
		let a[597] = 2;
		let a[598] = 10368;
		let a[599] = 29;
		let a[600] = 7;
		let a[601] = 1;
		let a[602] = 30;
		let a[603] = 8;
		let a[604] = 8;
		let a[605] = 10370;
		let a[606] = 31;
		let a[607] = 8;
		let a[608] = 8;
		let a[609] = 10372;
		let a[610] = 32;
		let a[611] = 8;
		let a[612] = 8;
		let a[613] = 10374;
		let a[614] = 3;
		let a[615] = 8;
		let a[616] = 0;
		let a[617] = 10384;
		let a[618] = 4;
		let a[619] = 14;
		let a[620] = 3;
		let a[621] = 10388;
		let a[622] = 5;
		let a[623] = 14;
		let a[624] = 1;
		let a[625] = 10390;
		let a[626] = 6;
		let a[627] = 1;
		let a[628] = 2;
		let a[629] = 10392;
		let a[630] = 7;
		let a[631] = 1;
		let a[632] = 1;
		let a[633] = 33;
		let a[634] = 2;
		let a[635] = 2;
		let a[636] = 34;
		let a[637] = 5;
		let a[638] = 2;
		let a[639] = 35;
		let a[640] = 6;
		let a[641] = 2;
		let a[642] = 36;
		let a[643] = 8;
		let a[644] = 6;
		let a[645] = 10394;
		let a[646] = 37;
		let a[647] = 2;
		let a[648] = 1;
		let a[649] = 38;
		let a[650] = 3;
		let a[651] = 2;
		let a[652] = 39;
		let a[653] = 5;
		let a[654] = 1;
		let a[655] = 40;
		let a[656] = 6;
		let a[657] = 1;
		let a[658] = 41;
		let a[659] = 8;
		let a[660] = 0;
		let a[661] = 10396;
		let a[662] = 42;
		let a[663] = 3;
		let a[664] = 1;
		let a[665] = 43;
		let a[666] = 4;
		let a[667] = 2;
		let a[668] = 44;
		let a[669] = 8;
		let a[670] = 10;
		let a[671] = 10398;
		let a[672] = 8;
		let a[673] = 4;
		let a[674] = 1;
		let a[675] = 9;
		let a[676] = 8;
		let a[677] = 6;
		let a[678] = 10400;
		let a[679] = 10;
		let a[680] = 8;
		let a[681] = 0;
		let a[682] = 10404;
		let a[683] = 11;
		let a[684] = 14;
		let a[685] = 3;
		let a[686] = 10408;
		let a[687] = 12;
		let a[688] = 14;
		let a[689] = 1;
		let a[690] = 10414;
		let a[691] = 13;
		let a[692] = 8;
		let a[693] = 6;
		let a[694] = 10416;
		let a[695] = 14;
		let a[696] = 8;
		let a[697] = 10;
		let a[698] = 10418;
		let a[699] = 15;
		let a[700] = 8;
		let a[701] = 0;
		let a[702] = 10420;
		let a[703] = 16;
		let a[704] = 8;
		let a[705] = 6;
		let a[706] = 10422;
		let a[707] = 0;
		let a[708] = 8;
		let a[709] = 0;
		let a[710] = 10424;
		let a[711] = 17;
		let a[712] = 0;
		let a[713] = 6;
		let a[714] = 18;
		let a[715] = 1;
		let a[716] = 0;
		let a[717] = 19;
		let a[718] = 2;
		let a[719] = 0;
		let a[720] = 20;
		let a[721] = 3;
		let a[722] = 0;
		let a[723] = 21;
		let a[724] = 4;
		let a[725] = 0;
		let a[726] = 22;
		let a[727] = 5;
		let a[728] = 0;
		let a[729] = 23;
		let a[730] = 6;
		let a[731] = 0;
		let a[732] = 24;
		let a[733] = 7;
		let a[734] = 0;
		let a[735] = 10442;
		let a[736] = 1;
		let a[737] = 2;
		let a[738] = 2;
		let a[739] = 2;
		let a[740] = 4;
		let a[741] = 2;
		let a[742] = 10444;
		let a[743] = 3;
		let a[744] = 0;
		let a[745] = 1;
		let a[746] = 25;
		let a[747] = 1;
		let a[748] = 1;
		let a[749] = 26;
		let a[750] = 2;
		let a[751] = 1;
		let a[752] = 27;
		let a[753] = 3;
		let a[754] = 1;
		let a[755] = 28;
		let a[756] = 4;
		let a[757] = 3;
		let a[758] = 29;
		let a[759] = 10;
		let a[760] = 1;
		let a[761] = 30;
		let a[762] = 11;
		let a[763] = 1;
		let a[764] = 31;
		let a[765] = 12;
		let a[766] = 1;
		let a[767] = 32;
		let a[768] = 13;
		let a[769] = 1;
		let a[770] = 10484;
		let a[771] = 4;
		let a[772] = 4;
		let a[773] = 1;
		let a[774] = 10492;
		let a[775] = 0;
		let a[776] = 7;
		let a[777] = 10;
		let a[778] = 10494;
		let a[779] = 5;
		let a[780] = 4;
		let a[781] = 0;
		let a[782] = 6;
		let a[783] = 7;
		let a[784] = 0;
		let a[785] = 7;
		let a[786] = 10;
		let a[787] = 0;
		let a[788] = 10496;
		let a[789] = 8;
		let a[790] = 3;
		let a[791] = 0;
		let a[792] = 9;
		let a[793] = 11;
		let a[794] = 0;
		let a[795] = 10498;
		let a[796] = 10;
		let a[797] = 2;
		let a[798] = 0;
		let a[799] = 11;
		let a[800] = 12;
		let a[801] = 0;
		let a[802] = 10500;
		let a[803] = 12;
		let a[804] = 1;
		let a[805] = 0;
		let a[806] = 13;
		let a[807] = 13;
		let a[808] = 0;
		let a[809] = 10502;
		let a[810] = 14;
		let a[811] = 7;
		let a[812] = 2;
		let a[813] = 10504;
		let a[814] = 15;
		let a[815] = 7;
		let a[816] = 1;
		let a[817] = 16;
		let a[818] = 8;
		let a[819] = 8;
		let a[820] = 10506;
		let a[821] = 1;
		let a[822] = 8;
		let a[823] = 8;
		let a[824] = 10508;
		let a[825] = 2;
		let a[826] = 8;
		let a[827] = 8;
		let a[828] = 10510;
		let a[829] = 3;
		let a[830] = 8;
		let a[831] = 0;
		let a[832] = 10520;
		let a[833] = 17;
		let a[834] = 14;
		let a[835] = 3;
		let a[836] = 10524;
		let a[837] = 18;
		let a[838] = 14;
		let a[839] = 1;
		let a[840] = 10526;
		let a[841] = 19;
		let a[842] = 1;
		let a[843] = 2;
		let a[844] = 10528;
		let a[845] = 20;
		let a[846] = 1;
		let a[847] = 1;
		let a[848] = 21;
		let a[849] = 2;
		let a[850] = 2;
		let a[851] = 22;
		let a[852] = 5;
		let a[853] = 8;
		let a[854] = 23;
		let a[855] = 6;
		let a[856] = 8;
		let a[857] = 24;
		let a[858] = 8;
		let a[859] = 6;
		let a[860] = 10530;
		let a[861] = 25;
		let a[862] = 2;
		let a[863] = 1;
		let a[864] = 26;
		let a[865] = 3;
		let a[866] = 2;
		let a[867] = 27;
		let a[868] = 5;
		let a[869] = 0;
		let a[870] = 28;
		let a[871] = 6;
		let a[872] = 0;
		let a[873] = 29;
		let a[874] = 8;
		let a[875] = 0;
		let a[876] = 10532;
		let a[877] = 30;
		let a[878] = 3;
		let a[879] = 1;
		let a[880] = 31;
		let a[881] = 4;
		let a[882] = 2;
		let a[883] = 10534;
		let a[884] = 32;
		let a[885] = 4;
		let a[886] = 1;
		let a[887] = 33;
		let a[888] = 8;
		let a[889] = 6;
		let a[890] = 10536;
		let a[891] = 34;
		let a[892] = 8;
		let a[893] = 0;
		let a[894] = 10538;
		let a[895] = 35;
		let a[896] = 9;
		let a[897] = 2;
		let a[898] = 36;
		let a[899] = 11;
		let a[900] = 2;
		let a[901] = 37;
		let a[902] = 13;
		let a[903] = 2;
		let a[904] = 10540;
		let a[905] = 38;
		let a[906] = 4;
		let a[907] = 0;
		let a[908] = 39;
		let a[909] = 8;
		let a[910] = 1;
		let a[911] = 40;
		let a[912] = 9;
		let a[913] = 1;
		let a[914] = 41;
		let a[915] = 10;
		let a[916] = 1;
		let a[917] = 42;
		let a[918] = 11;
		let a[919] = 1;
		let a[920] = 43;
		let a[921] = 12;
		let a[922] = 1;
		let a[923] = 44;
		let a[924] = 13;
		let a[925] = 1;
		let a[926] = 10544;
		let a[927] = 45;
		let a[928] = 3;
		let a[929] = 3;
		let a[930] = 10560;
		let a[931] = 0;
		let a[932] = 0;
		let a[933] = 6;
		let a[934] = 4;
		let a[935] = 1;
		let a[936] = 0;
		let a[937] = 5;
		let a[938] = 2;
		let a[939] = 0;
		let a[940] = 6;
		let a[941] = 3;
		let a[942] = 0;
		let a[943] = 7;
		let a[944] = 7;
		let a[945] = 0;
		let a[946] = 8;
		let a[947] = 8;
		let a[948] = 0;
		let a[949] = 9;
		let a[950] = 9;
		let a[951] = 0;
		let a[952] = 46;
		let a[953] = 10;
		let a[954] = 0;
		let a[955] = 47;
		let a[956] = 11;
		let a[957] = 0;
		let a[958] = 48;
		let a[959] = 12;
		let a[960] = 0;
		let a[961] = 49;
		let a[962] = 13;
		let a[963] = 0;
		let a[964] = 50;
		let a[965] = 14;
		let a[966] = 4;
		let a[967] = 10564;
		let a[968] = 10;
		let a[969] = 12;
		let a[970] = 1;
		let a[971] = 10568;
		let a[972] = 11;
		let a[973] = 3;
		let a[974] = 1;
		let a[975] = 10574;
		let a[976] = 1;
		let a[977] = 12;
		let a[978] = 0;
		let a[979] = 10580;
		let a[980] = 2;
		let a[981] = 3;
		let a[982] = 0;
		let a[983] = 3;
		let a[984] = 8;
		let a[985] = 3;
		let a[986] = 10584;
		let a[987] = 12;
		let a[988] = 3;
		let a[989] = 1;
		let a[990] = 13;
		let a[991] = 8;
		let a[992] = 0;
		let a[993] = 10588;
		let a[994] = 14;
		let a[995] = 3;
		let a[996] = 0;
		let a[997] = 10590;
		let a[998] = 15;
		let a[999] = 11;
		let a[1000] = 1;
		let a[1001] = 10602;
		let a[1002] = 16;
		let a[1003] = 0;
		let a[1004] = 3;
		let a[1005] = 10604;
		let a[1006] = 17;
		let a[1007] = 1;
		let a[1008] = 10;
		let a[1009] = 18;
		let a[1010] = 2;
		let a[1011] = 10;
		let a[1012] = 10606;
		let a[1013] = 19;
		let a[1014] = 1;
		let a[1015] = 0;
		let a[1016] = 20;
		let a[1017] = 2;
		let a[1018] = 0;
		let a[1019] = 10608;
		let a[1020] = 21;
		let a[1021] = 0;
		let a[1022] = 6;
		let a[1023] = 10614;
		let a[1024] = 22;
		let a[1025] = 11;
		let a[1026] = 3;
		let a[1027] = 10620;
		let a[1028] = 23;
		let a[1029] = 11;
		let a[1030] = 0;
		let a[1031] = 10622;
		let a[1032] = 24;
		let a[1033] = 0;
		let a[1034] = 1;
		let a[1035] = 10626;
		let a[1036] = 0;
		let a[1037] = 14;
		let a[1038] = 1;
		let a[1039] = 10628;
		let a[1040] = 4;
		let a[1041] = 7;
		let a[1042] = 2;
		let a[1043] = 5;
		let a[1044] = 9;
		let a[1045] = 2;
		let a[1046] = 6;
		let a[1047] = 11;
		let a[1048] = 2;
		let a[1049] = 7;
		let a[1050] = 13;
		let a[1051] = 2;
		let a[1052] = 10630;
		let a[1053] = 8;
		let a[1054] = 1;
		let a[1055] = 2;
		let a[1056] = 9;
		let a[1057] = 3;
		let a[1058] = 2;
		let a[1059] = 10;
		let a[1060] = 7;
		let a[1061] = 1;
		let a[1062] = 25;
		let a[1063] = 8;
		let a[1064] = 1;
		let a[1065] = 26;
		let a[1066] = 9;
		let a[1067] = 1;
		let a[1068] = 27;
		let a[1069] = 10;
		let a[1070] = 1;
		let a[1071] = 28;
		let a[1072] = 11;
		let a[1073] = 1;
		let a[1074] = 29;
		let a[1075] = 12;
		let a[1076] = 1;
		let a[1077] = 30;
		let a[1078] = 13;
		let a[1079] = 1;
		let a[1080] = 10632;
		let a[1081] = 11;
		let a[1082] = 1;
		let a[1083] = 1;
		let a[1084] = 31;
		let a[1085] = 2;
		let a[1086] = 1;
		let a[1087] = 32;
		let a[1088] = 3;
		let a[1089] = 1;
		let a[1090] = 10634;
		let a[1091] = 33;
		let a[1092] = 3;
		let a[1093] = 3;
		let a[1094] = 34;
		let a[1095] = 7;
		let a[1096] = 3;
		let a[1097] = 10638;
		let a[1098] = 1;
		let a[1099] = 10;
		let a[1100] = 0;
		let a[1101] = 35;
		let a[1102] = 11;
		let a[1103] = 0;
		let a[1104] = 36;
		let a[1105] = 12;
		let a[1106] = 0;
		let a[1107] = 10694;
		let a[1108] = 0;
		let a[1109] = 10;
		let a[1110] = 1;
		let a[1111] = 2;
		let a[1112] = 11;
		let a[1113] = 1;
		let a[1114] = 3;
		let a[1115] = 12;
		let a[1116] = 1;
		let a[1117] = 10698;
		let a[1118] = 10001;
		return a;
	}

}   //  ============================================================================
